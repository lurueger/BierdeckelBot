<testset xmlns="http://cpee.org/ns/properties/2.0">
  <executionhandler>ruby</executionhandler>
  <dataelements>
    <grbl_status>running</grbl_status>
    <printingQueue_filename>empty</printingQueue_filename>
    <printingQueue_gcode>empty</printingQueue_gcode>
  </dataelements>
  <endpoints>
    <timeout>https://cpee.org/services/timeout.php</timeout>
    <subprocess>https://cpee.org/flow/start/url/</subprocess>
    <bierdeckelbot_0>https://lab.bpm.in.tum.de/ur/programs/LukasRuegerBierdeckelBot/0_home_to_bierdeckel_pos.urp/wait</bierdeckelbot_0>
    <bierdeckelbot_1>https://lab.bpm.in.tum.de/ur/programs/LukasRuegerBierdeckelBot/1_get_bierdeckel_and_insert.urp/wait</bierdeckelbot_1>
    <bierdeckelbot_2>https://lab.bpm.in.tum.de/ur/programs/LukasRuegerBierdeckelBot/2_retrieve_bierdeckel.urp/wait</bierdeckelbot_2>
    <grbl_home>https://address-of-grbl-service/home</grbl_home>
    <grbl_robot>https://address-of-grbl-service/robot</grbl_robot>
    <grbl_executeGcode>https://address-of-grbl-service/executeGcode</grbl_executeGcode>
    <grbl_status>https://address-of-grbl-service/status</grbl_status>
    <gcode_connect>https://address-of-gcode-service/connect</gcode_connect>
    <gcode_getPrintingQueue>https://address-of-gcode-service/getPrintingQueue</gcode_getPrintingQueue>
    <gcode_setPrintingQueue>https://address-of-gcode-service/setPrintingQueue</gcode_setPrintingQueue>
    <gcode_getFile>https://address-of-gcode-service/getFile</gcode_getFile>
  </endpoints>
  <attributes>
    <guarded>none</guarded>
    <modeltype>CPEE</modeltype>
    <theme>extended</theme>
    <guarded_id/>
    <info>BierdeckelBot_vFinal</info>
    <creator>Lukas RÃ¼ger</creator>
    <author>Christine Ashcreek</author>
    <model_uuid>b9dcfa2f-36ec-4b7e-978c-3faf799ce4cf</model_uuid>
    <model_version/>
    <design_dir>Teaching.dir/Prak.dir/TUM-Prak-24-SS.dir/RuegerBierdeckelBot.dir/</design_dir>
    <design_stage>development</design_stage>
  </attributes>
  <description>
    <description xmlns="http://cpee.org/ns/description/1.0">
      <call id="a9" endpoint="gcode_connect">
        <parameters>
          <label>Activate frontend by connecting to gcode-service</label>
          <arguments/>
        </parameters>
        <annotations>
          <_generic/>
          <_timing>
            <_timing_weight/>
            <_timing_avg/>
            <explanations/>
          </_timing>
          <_shifting>
            <_shifting_type>Duration</_shifting_type>
          </_shifting>
          <_context_data_analysis>
            <probes/>
            <ips/>
          </_context_data_analysis>
          <report>
            <url/>
          </report>
          <_notes>
            <_notes_general/>
          </_notes>
        </annotations>
        <documentation>
          <input/>
          <output/>
          <implementation>
            <description/>
          </implementation>
        </documentation>
      </call>
      <loop mode="pre_test" condition="true">
        <_probability>
          <_probability_min/>
          <_probability_max/>
          <_probability_avg/>
        </_probability>
        <call id="a2" endpoint="grbl_home">
          <parameters>
            <label>Home the GRBL through the grbl-service</label>
            <method>:post</method>
            <arguments/>
          </parameters>
          <annotations>
            <_generic/>
            <_timing>
              <_timing_weight/>
              <_timing_avg/>
              <explanations/>
            </_timing>
            <_shifting>
              <_shifting_type>Duration</_shifting_type>
            </_shifting>
            <_context_data_analysis>
              <probes/>
              <ips/>
            </_context_data_analysis>
            <report>
              <url/>
            </report>
            <_notes>
              <_notes_general/>
            </_notes>
          </annotations>
          <documentation>
            <input/>
            <output/>
            <implementation>
              <description/>
            </implementation>
          </documentation>
        </call>
        <loop mode="pre_test" condition="data.printingQueue_filename == 'empty'">
          <_probability>
            <_probability_min/>
            <_probability_max/>
            <_probability_avg/>
          </_probability>
          <call id="a11" endpoint="gcode_getPrintingQueue">
            <parameters>
              <label>Read printingQueue from gcode-service every 5 seconds</label>
              <method>:get</method>
              <arguments/>
            </parameters>
            <code>
              <prepare/>
              <finalize output="result">data.printingQueue_filename = result['printingQueue']
sleep(5)</finalize>
              <update output="result"/>
              <rescue output="result"/>
            </code>
            <annotations>
              <_generic/>
              <_timing>
                <_timing_weight/>
                <_timing_avg/>
                <explanations/>
              </_timing>
              <_shifting>
                <_shifting_type>Duration</_shifting_type>
              </_shifting>
              <_context_data_analysis>
                <probes/>
                <ips/>
              </_context_data_analysis>
              <report>
                <url/>
              </report>
              <_notes>
                <_notes_general/>
              </_notes>
            </annotations>
            <documentation>
              <input/>
              <output/>
              <implementation>
                <description/>
              </implementation>
              <code>
                <description/>
              </code>
            </documentation>
          </call>
        </loop>
        <call id="a4" endpoint="gcode_getFile">
          <parameters>
            <label>Get the gcode of the file in the printingQueue</label>
            <method>:post</method>
            <arguments>
              <filename>!data.printingQueue_filename</filename>
            </arguments>
          </parameters>
          <code>
            <prepare/>
            <finalize output="result">data.printingQueue_gcode = result['content']</finalize>
            <update output="result"/>
            <rescue output="result"/>
          </code>
          <annotations>
            <_generic/>
            <_timing>
              <_timing_weight/>
              <_timing_avg/>
              <explanations/>
            </_timing>
            <_shifting>
              <_shifting_type>Duration</_shifting_type>
            </_shifting>
            <_context_data_analysis>
              <probes/>
              <ips/>
            </_context_data_analysis>
            <report>
              <url/>
            </report>
            <_notes>
              <_notes_general/>
            </_notes>
          </annotations>
          <documentation>
            <input/>
            <output/>
            <implementation>
              <description/>
            </implementation>
            <code>
              <description/>
            </code>
          </documentation>
        </call>
        <call id="a12" endpoint="bierdeckelbot_0">
          <parameters>
            <label>Move robot arm from home to default position</label>
            <method>:put</method>
            <arguments/>
          </parameters>
          <annotations>
            <_generic/>
            <_timing>
              <_timing_weight/>
              <_timing_avg/>
              <explanations/>
            </_timing>
            <_shifting>
              <_shifting_type>Duration</_shifting_type>
            </_shifting>
            <_context_data_analysis>
              <probes/>
              <ips/>
            </_context_data_analysis>
            <report>
              <url/>
            </report>
            <_notes>
              <_notes_general/>
            </_notes>
          </annotations>
          <documentation>
            <input/>
            <output/>
            <implementation>
              <description/>
            </implementation>
          </documentation>
        </call>
        <call id="a13" endpoint="grbl_robot">
          <parameters>
            <label>Move the GRBL forward for robot access</label>
            <method>:post</method>
            <arguments/>
          </parameters>
          <annotations>
            <_generic/>
            <_timing>
              <_timing_weight/>
              <_timing_avg/>
              <explanations/>
            </_timing>
            <_shifting>
              <_shifting_type>Duration</_shifting_type>
            </_shifting>
            <_context_data_analysis>
              <probes/>
              <ips/>
            </_context_data_analysis>
            <report>
              <url/>
            </report>
            <_notes>
              <_notes_general/>
            </_notes>
          </annotations>
          <documentation>
            <input/>
            <output/>
            <implementation>
              <description/>
            </implementation>
          </documentation>
        </call>
        <call id="a14" endpoint="bierdeckelbot_1">
          <parameters>
            <label>Move robot arm to put Bierdeckel into drawing position</label>
            <method>:put</method>
            <arguments/>
          </parameters>
          <annotations>
            <_generic/>
            <_timing>
              <_timing_weight/>
              <_timing_avg/>
              <explanations/>
            </_timing>
            <_shifting>
              <_shifting_type>Duration</_shifting_type>
            </_shifting>
            <_context_data_analysis>
              <probes/>
              <ips/>
            </_context_data_analysis>
            <report>
              <url/>
            </report>
            <_notes>
              <_notes_general/>
            </_notes>
          </annotations>
          <documentation>
            <input/>
            <output/>
            <implementation>
              <description/>
            </implementation>
          </documentation>
        </call>
        <call id="a15" endpoint="grbl_executeGcode">
          <parameters>
            <label>Start an asynchronous drawing process on the CNC</label>
            <method>:post</method>
            <arguments>
              <gcode>!data.printingQueue_gcode</gcode>
            </arguments>
          </parameters>
          <annotations>
            <_generic/>
            <_timing>
              <_timing_weight/>
              <_timing_avg/>
              <explanations/>
            </_timing>
            <_shifting>
              <_shifting_type>Duration</_shifting_type>
            </_shifting>
            <_context_data_analysis>
              <probes/>
              <ips/>
            </_context_data_analysis>
            <report>
              <url/>
            </report>
            <_notes>
              <_notes_general/>
            </_notes>
          </annotations>
          <documentation>
            <input/>
            <output/>
            <implementation>
              <description/>
            </implementation>
          </documentation>
        </call>
        <loop mode="pre_test" condition="data.grbl_status == 'running'">
          <_probability>
            <_probability_min/>
            <_probability_max/>
            <_probability_avg/>
          </_probability>
          <call id="a16" endpoint="grbl_status">
            <parameters>
              <label>Check every 5 seconds if GRBL execution is finished</label>
              <method>:get</method>
              <arguments/>
            </parameters>
            <code>
              <prepare/>
              <finalize output="result">data.grbl_status = result['status']
sleep(5)</finalize>
              <update output="result"/>
              <rescue output="result"/>
            </code>
            <annotations>
              <_generic/>
              <_timing>
                <_timing_weight/>
                <_timing_avg/>
                <explanations/>
              </_timing>
              <_shifting>
                <_shifting_type>Duration</_shifting_type>
              </_shifting>
              <_context_data_analysis>
                <probes/>
                <ips/>
              </_context_data_analysis>
              <report>
                <url/>
              </report>
              <_notes>
                <_notes_general/>
              </_notes>
            </annotations>
            <documentation>
              <input/>
              <output/>
              <implementation>
                <description/>
              </implementation>
              <code>
                <description/>
              </code>
            </documentation>
          </call>
        </loop>
        <call id="a17" endpoint="grbl_robot">
          <parameters>
            <label>Move the GRBL forward for robot access</label>
            <method>:post</method>
            <arguments/>
          </parameters>
          <annotations>
            <_generic/>
            <_timing>
              <_timing_weight/>
              <_timing_avg/>
              <explanations/>
            </_timing>
            <_shifting>
              <_shifting_type>Duration</_shifting_type>
            </_shifting>
            <_context_data_analysis>
              <probes/>
              <ips/>
            </_context_data_analysis>
            <report>
              <url/>
            </report>
            <_notes>
              <_notes_general/>
            </_notes>
          </annotations>
          <documentation>
            <input/>
            <output/>
            <implementation>
              <description/>
            </implementation>
          </documentation>
        </call>
        <call id="a18" endpoint="bierdeckelbot_2">
          <parameters>
            <label>Take Bierdeckel from drawing bed</label>
            <method>:put</method>
            <arguments/>
          </parameters>
          <annotations>
            <_generic/>
            <_timing>
              <_timing_weight/>
              <_timing_avg/>
              <explanations/>
            </_timing>
            <_shifting>
              <_shifting_type>Duration</_shifting_type>
            </_shifting>
            <_context_data_analysis>
              <probes/>
              <ips/>
            </_context_data_analysis>
            <report>
              <url/>
            </report>
            <_notes>
              <_notes_general/>
            </_notes>
          </annotations>
          <documentation>
            <input/>
            <output/>
            <implementation>
              <description/>
            </implementation>
          </documentation>
        </call>
        <call id="a1" endpoint="gcode_setPrintingQueue">
          <parameters>
            <label>Reset internal variables and printingQueue from gcode-service</label>
            <method>:post</method>
            <arguments>
              <filename>'empty'</filename>
            </arguments>
          </parameters>
          <code>
            <prepare/>
            <finalize output="result">data.printingQueue_filename = 'empty'
data.printingQueue_gcode = 'empty'
data.grbl_status = 'running'</finalize>
            <update output="result"/>
            <rescue output="result"/>
          </code>
          <annotations>
            <_generic/>
            <_timing>
              <_timing_weight/>
              <_timing_avg/>
              <explanations/>
            </_timing>
            <_shifting>
              <_shifting_type>Duration</_shifting_type>
            </_shifting>
            <_context_data_analysis>
              <probes/>
              <ips/>
            </_context_data_analysis>
            <report>
              <url/>
            </report>
            <_notes>
              <_notes_general/>
            </_notes>
          </annotations>
          <documentation>
            <input/>
            <output/>
            <implementation>
              <description/>
            </implementation>
            <code>
              <description/>
            </code>
          </documentation>
        </call>
      </loop>
    </description>
  </description>
  <transformation>
    <description type="copy"/>
    <dataelements type="none"/>
    <endpoints type="none"/>
  </transformation>
</testset>